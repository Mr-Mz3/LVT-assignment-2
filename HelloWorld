/// SPDX-License-Identifier: MIT
pragma solidity ^0.8.24;

contract HelloWorld {
    string public greeting;
    address private owner;

///set initial greeting, and owner role 
constructor() {
    greeting = "Happy, Smiles!";
    owner = msg.sender; 

    }

///declare event
event GreetingChanged(string previousGreeting, string newGreeting);

///grant owner role     
modifier onlyOwner() {
    require(msg.sender == owner, "Only the owner can call this function");
    _;
   }

///set return function
function sayGreeting() public view returns (string memory) {
    return greeting;
   }

///Declare event log
function setGreeting(string memory _greeting) public onlyOwner {
    emit GreetingChanged(greeting, _greeting);
    greeting = _greeting;
   }

}
